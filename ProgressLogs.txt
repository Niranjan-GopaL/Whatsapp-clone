
                        REMEMBER    !!!!


HOW TO CREATE A REACT-NATIVE APP in my setup --------------------FINALLY !!!--------

- npx create-expo-app ./
- yarn
- yarn add expo

- npx expo start --tunnel
------------------------------------------------------------ THAT'S IT --------------

Expo build trouble

Solution 1:

   -  Make sure both in same wifi. 
   -  npx expo start (it'll complain) 
   -  nest
                     ( Kinda like refresh )

Solution 2:

   - yarn add expo (reinstalling dependencies idk y)
   - nest
            

Look at styling in ChatListItem =====> NO UNITS DAMNNNN












------------------------ PROGRESS LOGS ----------------------------------------------

1) Initialised project

2) Working on ChatListItem in src/components/ChatListItem
   that's where I stopped 

I HAVE A PICTURE OF CAT AS PFP WITH LOTS OF TEXT elems

   poosible problem ahead 

3) Whatsapp Asset folder is THERE IN THE APP DEV dir

4) ChatListItem UI done

5) Working on sending Props part. Making rendering DYNAMIC

basic structure of a chat

const chat = {
  id: "1",
  user: {
    image:
      "https://notjustdev-dummy.s3.us-east-2.amazonaws.com/avatars/lukas.jpeg",
    name: "Lukas",
  },
  lastMessage: {
    text: "Oke",
    createdAt: "07:30",
  },
};



NOW YOU HAVE THE ABILITY TO PASS IN PROPS TO A COMPONENT SO THAT IT RENDERS DYNAMIC DATA


6) Working on ChatsScreen UI - 4

    Now just have a static data from Assets
    Later we'll get all that from backend

7) ChatScreen UI - 5 (ITS SINGULAR! lol)

<ImageBackground> is amazing.

8) Message component is used forrendering each message


                      VERY USEFULL AND RELEVENT SKILL AND 


How to render Messges depending on condition


  const isMyMessage = message.user.id == 'u1'

    <View style={
      [
          styles.container, // whenever we want to render more than one styles we render them through lists
          {
            backgroundColor: isMyMessage ? 'green' : 'white',
            alignSelf: isMyMessage ? 'flex-end' : 'flex-start'
          }
      ]
    }>


9) Expo Vector Icons is where you want to go for all icon stuff 

10)IOS EXCLUSIVE ==>

                  // src/screens/ChatScreen.js

                  return (
                    <KeyboardAvoidingView
                      behavior={Platform.OS === "ios" ? "padding" : "height"}
                      style={styles.bg}
                    >
                      <ImageBackground source={bg} style={styles.bg}>
                      ...
                      </ImageBackground>
                    </KeyboardAvoidingView>
                  )


11)  Binding the even of "onPress" to the function onSend :=
     Hooks associated 


const InputBox = () => {

    
 ---->>   const [newMessage, setNewMessage] = useState('');



---->>    const onSend = () => {

          // IT'S CONSOLE.WARN (you'll see it in screen, kinda like alert() )
          console.warn('Sending a new message: ', newMessage);

          setNewMessage('');
        };

    return (
    ...

---->>    <MaterialIcons onPress={onSend} style={styles.send} name="send" size={16} color="white" />
      
    ... 
    )

}